const sequelize = require("./db");
const { User, Signal } = require("./models"); // ‚úÖ importar todos los modelos
const bcrypt = require("bcrypt");

async function initializeDatabase() {
  try {
    await sequelize.sync({ force: true }); // recrea todas las tablas
    console.log("üì¶ Tablas sincronizadas");

    await createUserAdmin();
    await crearDatosDemoSignal(); // ‚¨ÖÔ∏è Nuevo paso
    console.log("Well Done!!");
  } catch (error) {
    console.error("Error inicializando la DB:", error);
  }
}

async function createUserAdmin() {
  const hashedPassword = await bcrypt.hash("admin123", 10);
  await User.create({
    username: "admin",
    password: hashedPassword,
    email: "admin@example.com",
    identification: "1234",
    role: "ADMIN",
  });
  console.log("üßë‚Äçüíº Usuario admin creado");
}

// ‚ûï Crea algunos datos demo para la tabla signals
async function crearDatosDemoSignal() {
  await Signal.bulkCreate([
    {
      time_signal:[0.00, 0.00, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.05,
   0.06, 0.06, 0.07, 0.07, 0.07, 0.08, 0.08, 0.09, 0.09, 0.09, 0.10, 0.10, 0.11, 0.11, 0.11,
    0.12, 0.12, 0.13, 0.13, 0.13, 0.14, 0.14, 0.14, 0.15, 0.15, 0.16, 0.16, 0.16, 0.17, 0.17,
     0.18, 0.18, 0.18, 0.19, 0.19, 0.20, 0.20, 0.20, 0.21, 0.21, 0.22, 0.22, 0.22, 0.23, 0.23,
      0.23, 0.24, 0.24, 0.25, 0.25, 0.25, 0.26, 0.26, 0.27, 0.27, 0.27, 0.28, 0.28, 0.29, 0.29,
       0.29, 0.30, 0.30, 0.30, 0.31, 0.31, 0.32, 0.32, 0.32, 0.33, 0.33, 0.34, 0.34, 0.34, 0.35,
        0.35, 0.36, 0.36, 0.36, 0.37, 0.37, 0.38, 0.38, 0.38, 0.39, 0.39, 0.39, 0.40, 0.40, 0.41,
         0.41, 0.41, 0.42, 0.42, 0.43, 0.43, 0.43, 0.44, 0.44, 0.45, 0.45, 0.45, 0.46, 0.46, 0.47,
          0.47, 0.47, 0.48, 0.48, 0.48, 0.49, 0.49, 0.50, 0.50, 0.50, 0.51, 0.51, 0.52, 0.52, 0.52,
           0.53, 0.53, 0.54, 0.54, 0.54, 0.55, 0.55, 0.56, 0.56, 0.56, 0.57, 0.57, 0.57, 0.58, 0.58,
            0.59, 0.59, 0.59, 0.60, 0.60, 0.61, 0.61, 0.61, 0.62, 0.62, 0.63, 0.63, 0.63, 0.64, 0.64,
             0.65, 0.65, 0.65, 0.66, 0.66, 0.66, 0.67, 0.67, 0.68, 0.68, 0.68, 0.69, 0.69, 0.70, 0.70,
              0.70, 0.71, 0.71, 0.72, 0.72, 0.72, 0.73, 0.73, 0.73, 0.74, 0.74, 0.75, 0.75, 0.75, 0.76,
               0.76, 0.77, 0.77, 0.77, 0.78, 0.78, 0.79, 0.79, 0.79, 0.80, 0.80, 0.81, 0.81, 0.81, 0.82,
                0.82, 0.82, 0.83, 0.83, 0.84, 0.84, 0.84, 0.85, 0.85, 0.86, 0.86, 0.86, 0.87, 0.87, 0.88,
                 0.88, 0.88, 0.89, 0.89, 0.90, 0.90, 0.90, 0.91, 0.91, 0.91, 0.92, 0.92, 0.93, 0.93,
                  0.93, 0.94, 0.94, 0.95, 0.95, 0.95, 0.96, 0.96, 0.97, 0.97, 0.97, 0.98, 0.98, 0.99,
                   0.99, 0.99, 1.00, 1.00, 1.00, 1.01, 1.01, 1.02, 1.02, 1.02, 1.03, 1.03, 1.04,
                    1.04, 1.04, 1.05, 1.05, 1.06, 1.06, 1.06, 1.07, 1.07, 1.08, 1.08, 1.08, 
                    1.09, 1.09, 1.09, 1.10, 1.10, 1.11, 1.11, 1.11, 1.12, 1.12, 1.13, 1.13,
                     1.13, 1.14, 1.14, 1.15, 1.15, 1.15, 1.16, 1.16, 1.16, 1.17, 1.17, 1.18,
                      1.18, 1.18, 1.19, 1.19, 1.20, 1.20, 1.20, 1.21, 1.21, 1.22, 1.22, 1.22,
                       1.23, 1.23, 1.24, 1.24, 1.24, 1.25, 1.25, 1.25, 1.26, 1.26, 1.27, 1.27,
                        1.27, 1.28, 1.28, 1.29, 1.29, 1.29, 1.30, 1.30, 1.31, 1.31, 1.31, 1.32, 
                        1.32, 1.33, 1.33, 1.33, 1.34, 1.34, 1.34, 1.35, 1.35, 1.36, 1.36, 1.36,
                         1.37, 1.37, 1.38, 1.38, 1.38, 1.39, 1.39, 1.40, 1.40, 1.40, 1.41, 1.41,
                          1.42, 1.42, 1.42, 1.43, 1.43, 1.43, 1.44, 1.44, 1.45, 1.45, 1.45, 1.46,
                           1.46, 1.47, 1.47, 1.47, 1.48, 1.48, 1.49, 1.49, 1.49, 1.50, 1.50, 1.51,
                            1.51, 1.51, 1.52, 1.52, 1.52, 1.53, 1.53, 1.54, 1.54, 1.54, 1.55, 1.55
                            , 1.56, 1.56, 1.56, 1.57, 1.57, 1.58, 1.58, 1.58, 1.59, 1.59, 1.59, 1.60,
                             1.60, 1.61, 1.61, 1.61, 1.62, 1.62, 1.63, 1.63, 1.63, 1.64, 1.64, 1.65,
                              1.65, 1.65, 1.66, 1.66, 1.67, 1.67, 1.67, 1.68, 1.68, 1.68, 1.69, 1.69,
                               1.70, 1.70, 1.70, 1.71, 1.71, 1.72, 1.72, 1.72, 1.73, 1.73, 1.74, 1.74,
                                1.74, 1.75, 1.75, 1.76, 1.76, 1.76, 1.77, 1.77, 1.77, 1.78, 1.78, 1.79,
                                 1.79, 1.79, 1.80, 1.80, 1.81, 1.81, 1.81, 1.82, 1.82, 1.83, 1.83, 1.83,
                                  1.84, 1.84, 1.85, 1.85, 1.85, 1.86, 1.86, 1.86, 1.87, 1.87, 1.88, 1.88,
                                   1.88, 1.89, 1.89, 1.90, 1.90, 1.90, 1.91, 1.91, 1.92, 1.92, 1.92, 1.93,
                                    1.93, 1.94, 1.94, 1.94, 1.95, 1.95, 1.95, 1.96, 1.96, 1.97, 1.97, 1.97,
                                     1.98, 1.98, 1.99, 1.99, 1.99, 2.00],
      data: [0.45, 1.00, 1.24, 1.58, 1.39, 1.55, 1.64, 1.66, 1.37, 1.61, 1.48, 1.01, 1.10, 1.18,
   0.60, 0.70, 0.73, 0.45, 0.18, 0.10, -0.06, -0.10, 0.13, -0.04, 0.36, 0.33, 0.68,
    0.76, 0.49, 0.55, 0.93, 0.76, 0.87, 0.94, 0.94, 1.04, 0.86, 0.78, 0.47, 0.62,
     -0.82, -0.85, -0.81, -0.58, -1.08, -0.84, -0.56, -1.06, -0.76, -0.75, -0.31,
      -0.27, -0.24, 0.48, -0.12, 0.22, -0.03, 0.22, -0.25, -0.19, -0.68, -0.37,
       -1.02, -0.90, -0.76, -0.97, -1.47, -1.21, -1.30, -1.36, -1.65, -1.54,
        -1.28, -1.15, -1.42, -1.03, -1.51, -1.02, -0.68, -1.05, -0.40, -0.68,
         1.29, 1.36, 1.24, 1.46, 1.12, 1.45, 1.04, 1.13, 1.07, 0.79, 0.74,
          0.54, 0.93, 0.72, 0.06, -0.01, 0.67, 0.90, 0.53, 0.55, 0.63, 0.75,
           1.03, 0.70, 1.07, 0.88, 0.96, 0.71, 1.16, 0.61, 0.50, 0.82, 0.47,
            0.21, 0.09, 0.36, 0.02, -0.15, -0.00, -0.08, 0.13, -0.12, 0.17,
             -0.63, -0.90, -0.39, -0.61, -0.25, -0.09, -0.01, 0.02, 0.39,
              0.17, 0.19, 0.09, -0.16, -0.19, 0.01, -0.57, -0.38, -0.57,
               -0.57, -0.79, -1.20, -0.98, -1.44, -1.44, -1.19, -1.44,
                -1.45, -0.93, -1.03, -0.92, -0.89, -0.55, -0.90, -0.70,
                 -0.41, -0.55, -0.42, -0.35, -0.57, -0.90, -0.22, -0.61,
                  -0.68, 0.43, 0.47, 0.34, 0.38, 0.30, 0.25, 0.43, 0.33,
                   0.39, 0.60, 0.76, 0.39, 0.85, 1.09, 1.34, 1.46, 1.33,
                    1.41, 1.48, 1.08, 1.15, 1.19, 0.92, 0.71, 0.55, 0.41,
                     0.16, 0.28, 0.22, -0.05, -0.40, -0.49, -0.14, 0.03,
                      0.11, 0.56, 0.76, 0.69, 1.17, 0.84, 1.05, 1.19,
                       -0.35, -0.17, 0.05, -0.23, 0.02, -0.26, -0.33,
                        -0.18, -0.51, -0.78, -0.96, -0.92, -0.78,
                         -0.62, -0.93, -1.17, -0.95, -0.85, -0.72,
                          -1.14, -1.08, -0.37, -0.79, -0.18, -0.64,
                           -0.54, -0.24, -0.07, -0.23, -0.34, -0.80,
                            -0.95, -0.88, -1.43, -0.82, -1.46, -1.22,
                             -1.51, -1.65, -1.45, -1.43, -1.18, -1.11,
                              0.47, 0.55, 0.60, 1.04, 0.92, 1.06, 1.10,
                               1.19, 1.59, 1.79, 1.45, 1.42, 1.12, 1.25,
                                1.47, 0.84, 0.69, 0.42, 0.33, 0.74, 0.04,
                                 0.29, 0.23, 0.04, 0.15, -0.26, 0.47, -0.06,
                                  0.34, 0.70, 0.81, 0.68, 0.88, 1.20, 0.97,
                                   0.96, 1.00, 0.79, 1.00, 0.65, 0.40, 0.43,
                                    0.34, -0.92, -0.80, -0.85, -1.06, -0.90,
                                     -1.03, -0.86, -0.80, -0.68, -0.68, -0.42,
                                      -0.39, -0.33, -0.51, 0.13, 0.29, -0.05,
                                       -0.10, -0.56, 0.01, -0.35, -0.07, -0.43,
                                        -0.64, -1.08, -1.03, -1.51, -1.32, -1.34,
                                         -1.39, -1.53, -1.42, -1.72, -1.70, -1.36,
                                          -1.19, -1.01, -0.71, -0.64, -0.62, -0.52,
                                           -0.19, 1.06, 1.40, 1.30, 1.50, 1.05, 1.24,
                                            1.36, 1.06, 0.71, 0.72, 0.87, 0.87, 0.26,
                                             0.25, 0.46, 0.32, -0.12, 0.26, 0.40, -0.01,
                                              0.64, 0.51, 0.98, 0.86, 1.01, 1.21, 0.67,
                                               0.89, 0.77, 0.70, 0.95, 0.51, 0.58, 0.59,
                                                0.41, 0.34, 0.08, 0.55, 0.31, 0.28, 0.03,
                                                 0.43, -0.10, -0.67, -0.98, -0.92, -0.47,
                                                  -0.54, -0.45, -0.15, -0.26, -0.26, 0.12,
                                                   0.29, 0.02, -0.09, -0.18, -0.41, -0.46,
                                                    -0.66, -0.78, -0.79, -1.23, -0.98, -1.08,
                                                     -1.40, -1.26, -1.32, -1.14, -1.10, -1.51,
                                                      -1.37, -1.11, -1.28, -0.67, -0.57, -0.43,
                                                       -0.37, -0.64, -0.46, -0.33, -0.35, -0.53,
                                                        -0.75, -0.71, 0.70, 0.21, 0.17, 0.46, 0.80, 
                                                        0.36, 0.91, 0.90, 0.79, 0.90, 0.77, 1.02,
                                                         1.10, 1.15, 1.27, 1.31, 1.33, 1.15,
                                                          1.10, 1.04, 1.27, 1.09, 1.19, 0.63,
                                                           0.20, 0.35, 0.54, 0.03, 0.10, 0.35,
                                                            -0.02, 0.26, -0.22, -0.07, -0.32,
                                                             -0.10, 0.32, 0.32, 0.60, 0.64,
                                                              0.73, 0.99, 1.15, -0.29,
                                                               -0.07, 0.09, 0.00, -0.26,
                                                                -0.38, -0.05, -0.72, -0.26, -0.44, -0.68,
                                                                 -0.65, -0.68, -0.72, -0.66, -0.78, -1.03, 
                                                                 -0.80, -0.84, -0.56, -1.00, -0.66, -0.06,
                                                                  -0.49, -0.69, -0.18, -0.61, -0.24, -0.32,
                                                                   -0.18, -0.62, -0.91, -1.17, -1.05, -0.73,
                                                                   -1.45, -1.33, -1.33, -1.39, -1.29, -1.67, 
                                                                   -1.33, -0.93, 0.34, 0.70, 1.09],
      type: "EEG",
    },
    {
      data: [
      0.0,  0.1,  0.2,  0.15,  0.1,  0.05,  0.0, -0.05, -0.1, -0.2,
      -0.05,  0.0, -0.4,  1.2, -0.7, -0.3,  0.0,  0.05,  0.1,  0.4,  
      0.2,  0.15,  0.1,  0.05,  0.0, -0.05, -0.1, -0.15, -0.1, -0.05, 
      0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,     
      0.1,  0.2,  0.15,  0.1,  0.05,  0.0, -0.4,  1.2, -0.7, -0.3,  
      0.0],
      time_signal: [
      0.00, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18,
      0.20, 0.22, 0.24, 0.26, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38,
      0.40, 0.42, 0.44, 0.46, 0.48, 0.50, 0.52, 0.54, 0.56, 0.58,
      0.60, 0.62, 0.64, 0.66, 0.68, 0.70, 0.72, 0.74, 0.76, 0.78,
      0.80, 0.82, 0.84, 0.86, 0.88, 0.90, 0.92, 0.94, 0.96, 0.98,
      1.00],
      type: "ECG",
    },
  ]);
  console.log("Se√±ales de prueba insertadas");
}

module.exports = {
  initializeDatabase,
};
// <const sequelize = require('./db');
// const User = require('./models/User');
// const bcrypt = require('bcrypt');

// async function initializeDatabase() { // async es algo que se ejecuta, y sigue ajecutando las otras lineas de codigo
//   try {
//     await sequelize.sync({ force: true }); // SOLO usar force: true en desarrollo (forza algun cambio que se hizo)
//     console.log('üì¶ Tablas sincronizadas');
//     await createUserAdmin(); //crear datos iniciales o un usuario inicial
//     console.log("Well Done!!")
//   } catch (error) {
//     console.error('Error inicializando la DB:', error);
//   }
// }

// async function createUserAdmin() {
//     // Crear usuario maestro
//     const hashedPassword = await bcrypt.hash('admin123', 10);
//     await User.create({
//       username: 'admin',
//       password: hashedPassword,
//       email: 'admin@example.com',
//       identification: '1234',
//       role: 'ADMIN',
//     });
//     console.log('Datos maestros insertados');
// }

// //Funciones a ser exportadas
// module.exports = {
//     initializeDatabase
// };
